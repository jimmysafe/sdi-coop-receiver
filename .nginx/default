log_format custom_json escape=json
        '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_user":"$remote_user",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"request_time":"$request_time",'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent"'
        '}';

map $status $loggable {
  /nginx_status 0;
  default 1;
}


server {
        listen 0.0.0.0:80;
        listen 0.0.0.0:443 ssl;
        ssl_certificate /etc/ssl/SDI-12779961007-server.pem;
        ssl_certificate_key /etc/ssl/SDI-12779961007-server.key;
        ssl_protocols SSLv2 SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_verify_client optional;
        ssl_verify_depth 5;
        ssl_client_certificate /etc/ssl/CAEntrateAll_new.pem;

        access_log /var/log/nginx/access.log combined if=$loggable;
        error_log /var/log/nginx/error.log;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name _;

	location / {
                proxy_http_version 1.1;
                proxy_cache_bypass $http_upgrade;

                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # the real magic is here where we forward requests to the address that the Node.js server is running on
                proxy_pass http://127.0.0.1:8000;
	}
}

